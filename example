#!/bin/bash -ue

script_path=$(dirname `readlink -f $0`)
script_name=$(basename `readlink -f $0`)

build_path="${script_path}/build"

function usage()
{
	echo ""
	echo "  This script assists you to execute examples."
	echo ""
	echo "  usage: ${script_name} [step] [target] [options]"
	echo ""
	echo "  Examples:"
	echo "   http    : HTTP examples."
	echo "   socket  : Socket examples."
	echo ""
	echo "  Options:"
	echo "   -h"
	echo "   --help        : Displays this help information"
	echo ""
	echo "  Example:"
	echo "    ${script_name} http"
	echo ""
}

function exec_http()
{
	cd "${build_path}"
	LD_LIBRARY_PATH="${build_path}/src" "${build_path}/examples/http/example_http"
}

function exec_socket()
{
	cd "${build_path}"
	LD_LIBRARY_PATH="${build_path}/src" "${build_path}/examples/socket/example_socket"
}

opts_words=()
opts_http=0
opts_socket=0

args=$(getopt \
	--options "h" \
	--longopt "help" \
	-- "$@")
if [ $? != 0 ]; then
	usage
	exit 1
fi

eval set -- ${args}
while [ $# -ne 0 ]; do
	case "$1" in
		-h)
			usage
			exit 1
			;;
		--help)
			usage
			exit 1
			;;
		*)
			if [ $# -gt 1 ] ; then
				opts_words[${#opts_words[*]}]=$2
			fi
			;;
	esac
	shift
done

for word in ${opts_words[*]} ; do
	case "${word}" in
		http)
			opts_http=1
			;;
		socket)
			opts_socket=1
			;;

		*)
			echo "ERROR: Found invalid argument. (${word})"
			exit 1
			;;
	esac
done

if [ ${opts_http} -ne 0 ]; then
	exec_http
fi

if [ ${opts_socket} -ne 0 ]; then
	exec_socket
fi

exit 0

